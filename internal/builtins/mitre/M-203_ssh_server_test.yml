# Copyright 2023 Undistro Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: "Service with no ports"
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      name: nginx
    spec:
      selector:
        app: nginx
      type: ClusterIP

- name: "Service with empty ports"
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      name: nginx
    spec:
      ports: []
      selector:
        app: nginx
      type: ClusterIP

- name: "Service with no SSH ports"
  pass: true
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      name: nginx
    spec:
      ports:
        - port: 80
      selector:
        app: nginx
      type: ClusterIP

- name: "Service with SSH port"
  pass: false
  message: "Service could be routing to SSH server"
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      name: nginx
    spec:
      ports:
        - port: 22
          targetPort: 80
      selector:
        app: nginx
      type: ClusterIP

- name: "Service with SSH targetPort"
  pass: false
  message: "Service could be routing to SSH server"
  input: |
    apiVersion: v1
    kind: Service
    metadata:
      name: nginx
    spec:
      ports:
        - port: 8080
          targetPort: 8080
        - port: 80
          targetPort: 2222
      selector:
        app: nginx
      type: ClusterIP

- name: "Container with no ports"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
      selector:
        matchLabels:
          app: nginx

- name: "Container with empty ports"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              ports: []
      selector:
        matchLabels:
          app: nginx

- name: "Container with no SSH ports"
  pass: true
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              ports:
                - containerPort: 80
      selector:
        matchLabels:
          app: nginx

- name: "Container with SSH port"
  pass: false
  message: "Container could be running SSH server"
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              ports:
                - containerPort: 80
                - containerPort: 22
      selector:
        matchLabels:
          app: nginx

- name: "Container with SSH port 2222"
  pass: false
  message: "Container could be running SSH server"
  input: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx
    spec:
      template:
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          containers:
            - name: nginx
              image: nginx
              ports:
                - containerPort: 2222
      selector:
        matchLabels:
          app: nginx
